---
import { type CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

type Props = {
  speaker: CollectionEntry<"speakers">;
};
const { speaker } = Astro.props;

const image_classes = `absolute h-full min-w-full object-cover`;
---

<div
  data-speaker
  class:list={[`h-screen md:h-[90svh]`, `grid md:grid-cols-2 gap-6 py-6`]}
>
  <div class="relative min-h-96">
    {
      speaker.data.pictures.map((picture, index) => (
        <Image
          data-picture-no={index}
          src={picture}
          alt=""
          class={image_classes}
        />
      ))
    }
  </div>
  <div data-text-content class="flex flex-col gap-6">
    <h2>
      {
        `${speaker.data.title ?? ""} ${speaker.data.first_name} ${speaker.data.last_name}`.trim()
      }
    </h2>
    <p class="text-xl">{speaker.data.bio}</p>
  </div>
</div>

<script>
  import { gsap, ScrollTrigger } from "gsap/all";
  gsap.registerPlugin(ScrollTrigger);

  const speakers = document.querySelectorAll("[data-speaker]");

  const scroll_distance = 500;

  speakers.forEach((speaker) => {
    const pictures = speaker.querySelectorAll("[data-picture-no]");

    const st = {
      trigger: speaker,
      start: "top top",
      end: `+=${scroll_distance}`,
      scrub: true,
      pin: true,
    };

    const tl = gsap.timeline({
      scrollTrigger: st,
    });

    if (pictures.length == 1) {
      tl.from(pictures[0], {
        scale: 0.5,
        borderRadius: 999,
      });
    } else if (pictures.length == 2) {
      tl.to(pictures[0], {
        scale: 0.5,
        x: "-100svw",
        borderRadius: 999,
      });

      tl.from(pictures[1], {
        delay: -0.6,
        scale: 0.5,
        y: "100svh",
        borderRadius: 999,
      });
    }
  });
</script>
