---
interface Props {
  email: string;
}

const { email } = Astro.props;

import { notion, database_registration_id } from "@/utils/notion";
import type { DatabaseObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import { MapPin, Calendar } from "lucide-react";
import Property from "./Property.astro";

const response = await notion.databases.query({
  database_id: database_registration_id,
  filter: {
    property: "Correo electrónico",
    email: {
      equals: email,
    },
  },
});

if (response.results.length == 0) {
  return "No encontramos ningún registro con ese correo electrónico...";
}

const registration =
  ((response.results[0] as DatabaseObjectResponse).properties as any) ?? null;

const nombre = registration["Nombre"].title[0].plain_text;
const apellidos = registration["Apellidos"].rich_text[0].text.content;

const estado_del_registro = registration["Estado del registro"].status.name;
let class_estado_del_registro = "bg-red-400";
let class_nametag = "border-red-800";
switch (estado_del_registro) {
  case "Esperando pago":
    class_estado_del_registro = "bg-gray-200";
    class_nametag = "border-gray-800";
    break;
  case "Pagado parcialmente":
    class_estado_del_registro = "bg-yellow-400";
    class_nametag = "border-yellow-800";
    break;
  case "Pagado completamente":
    class_estado_del_registro = "bg-green-400";
    class_nametag = "border-green-800";
    break;
}
---

<div
  data-boleto
  class={`
  flex flex-col gap-4
  border-2 border-stone-800 rounded-xl p-4
  w-full max-w-96 mx-auto
  font-mono
`}
>
  <div class="w-full">
    <p>Pase de Conferencia</p>
    <p class="text-xs opacity-50">SEEK Local en Monterrey, 2025</p>
  </div>

  <div
    class:list={[
      "flex flex-col gap-2 items-center w-full rounded p-4 bg-stone-800 border-[1px]",
      class_nametag,
    ]}
  >
    <div class="w-full">
      <h3 class="font-mono">{nombre}</h3>

      <p>{apellidos}</p>
    </div>

    <div class="flex gap-2 w-full items-center">
      <div
        class:list={[
          "size-3 rounded-full animate-ping",
          class_estado_del_registro,
        ]}
      >
      </div>
      <p class="text-xs opacity-50">{estado_del_registro}</p>
    </div>
  </div>

  <div class="w-full grid grid-cols-[auto_1fr] text-xs gap-2">
    <Property name="Ubicación" value="Edificio ESTOA, Universidad de Monterrey">
      <MapPin className="size-4" slot="icon" />
    </Property>

    <Property name="Fecha" value="7 - 9 de marzo, 2025">
      <Calendar className="size-4" slot="icon" />
    </Property>
  </div>

  <hr class="border-stone-600 border-dashed border-[1px]" />

  <div class="flex flex-col items-center gap-2">
    <svg
      id="barcode"
      jsbarcode-format="CODE128"
      jsbarcode-value={"REGNO:" +
        (
          registration["Registration no."]["rich_text"][0].text
            .content as string
        ).toUpperCase()}
      class="w-full"></svg>
  </div>
</div>

<script>
  import JsBarcode from "jsbarcode";

  JsBarcode(
    "#barcode", // @ts-ignore
    {},
    { background: "#000", lineColor: "rgb(245, 245, 244)" },
  ).init();
</script>
